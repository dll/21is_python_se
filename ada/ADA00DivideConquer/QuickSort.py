# encoding=utf-8

#######################################################
# 
# QuickSort.py
# Python implementation of the Class QuickSort
# Generated by Enterprise Architect
# Created on:      16-3��-2023 15:42:21
# Original author: dll
# 
#######################################################


class QuickSort:
    def partition(self, a, left, right):
        i = left
        j = right
        while i < j:
            while a[i] <= a[j] and i < j:
                j -= 1
            if i < j:
                self.swap(a, i, j)
                i += 1
            while a[i] <= a[j] and i < j:
                i += 1
            if i < j:
                self.swap(a, i, j)
                j -= 1
        return i

    def quickSort(self, a):
        self.rquickSort(a, 0, len(a) - 1)

    def rquickSort(self, a, left, right):
        pivotposition = 0
        if left < right:
            pivotposition = self.partition(a, left, right)
            self.rquickSort(a, left, pivotposition - 1)
            self.rquickSort(a, pivotposition + 1, right)

    def swap(self, a, x, y):
        temp = a[x]
        a[x] = a[y]
        a[y] = temp
