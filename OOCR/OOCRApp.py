# encoding=utf-8

#######################################################
# 
# OOCRApp.py
# Python implementation of the Class OOCRApp
# Generated by Enterprise Architect
# Created on:      03-03-2023 8:55:16
# Original author: The Administrator
# 
#######################################################
from os import system

from Bird import Bird
from Climate import Climate
from ClimateType import ClimateType
from DonaldDuck import DonaldDuck
from Duck import Duck
from Oxygen import Oxygen
from Penguin import Penguin
from Water import Water
from WildGeeseGroup import WildGeeseGroup
from WildGoose import WildGoose


class OOCRApp:
    def Aggregation(self):
        wgs = [WildGoose(), WildGoose(), WildGoose()];
        wgg = WildGeeseGroup(wgs);
        wg4 = WildGoose();
        wgg.joinWildGeeseGroup(wg4);
        wg5 = WildGoose();
        wgg.joinWildGeeseGroup(wg5);
        wgg.leaveWildGeeseGroup(wg4);

    def Association(self):
        dd = DonaldDuck();
        d = Duck();
        dd.speak();
        d.quack();

        p = Penguin();
        c = Climate(ClimateType.coldzone.value);
        p.setclimate(c);

    def Composition(self):
        angryBird = Bird();
        angryBird.propagate()

    def Dependency(self):
        minDuck = Duck();
        minDuck.metabolize(Oxygen(), Water());
        minDuck.propagate();
        DonaldDuck.quackSpeak();

    def Generalization(self):
        bird = Bird();
        bird.propagate();
        bird.metabolize(Oxygen(), Water());

    def Polymorphic(self):
        bird = Duck();
        bird.propagate();
        bird = WildGoose();
        bird.propagate();
        bird = Penguin();
        bird.propagate();

    def Relization(self):
        wg = WildGoose();
        wg.fly();


if __name__ == '__main__':
    app = OOCRApp();
    while True:
        system("cls")
        print("1-Generalization继承  2-Realization实现  3-Composition组合 4-Aggregation聚合 5-Association关联 6-Dependency依赖 "
              "7-Polymorphic多态")
        n = int(input("Please input from 1 to 7 , 0 to exit\n"))
        match n:
            case 0:
                break
            case 1:
                app.Generalization();
            case 2:
                app.Relization();
            case 3:
                app.Composition();
            case 4:
                app.Aggregation();
            case 5:
                app.Association();
            case 6:
                app.Dependency();
            case 7:
                app.Polymorphic();
            case _:
                print('Sorry! Please input from 1 to 7 !')
        system("pause")
