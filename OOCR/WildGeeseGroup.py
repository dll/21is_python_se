#######################################################
# 
# WildGeeseGroup.py
# Python implementation of the Class WildGeeseGroup
# Generated by Enterprise Architect
# Created on:      03-03-2023 8:55:17
# Original author: liu dongliang
# 
#######################################################
import sys

from WildGoose import WildGoose


class WildGeeseGroup:
    count = 3

    m_WildGoose = [sys.maxsize / 1000000]

    def joinWildGeeseGroup(self, wg):
        self.count = self.count + 1
        print("joinWildGeeseGroup has " + str(self.count) + " WildGeese!\n");
        if self.count < sys.maxsize / 1000000:
            self.m_WildGoose.append(wg);

        else:
            print("WildGeeseGroup Too Big");

    def leaveWildGeeseGroup(self, wg):
        self.count = self.count - 1
        print("A WildGeese leaved. " + str(self.count) + " WildGeese!\n");
        self.m_WildGoose.remove(wg);

    def WildGeeseGroup(self):
        pass

    def WildGeeseGroup(self, wg):
        print("WildGeeseGroup Total WildGeese " + self.m_WildGoose.length + "\n");
        for i in range(wg.length):
            self.m_WildGoose[i] = wg[i]
        print("WildGeeseGroup initial size " + str(self.count) + "\n");
